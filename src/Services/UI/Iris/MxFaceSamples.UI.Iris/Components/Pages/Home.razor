@page "/"
@using MxFaceSamples.BuildingBlocks.Iris.Models
@using MxFaceSamples.BuildingBlocks.Iris.Services
@using MxFaceSamples.UI.Iris
@inject DeviceService deviceService
@inject IrisCapturingService capturingServices
@inject IrisMatchingService matchingServices

<PageTitle>MxFace Iris Sample</PageTitle>

@* @if (Device is null)
{
    <p>No Device Found!</p>
} *@
@* else
{ *@

<!-- Capture Section -->

<div class="custom_card">
    <p class="heading_title">Capture</p>
    <div class="row mb-3">
        <div class="col-md-6">
            <div class="d-flex justify-content-between">
                <div class="custom_card details_box w-100 mb-0">
                    <div class="detail_item_box"><strong>Serial No:</strong> @* @Device.DeviceInfo.SerialNo *@</div>
                    <div class="detail_item_box"><strong>Model:</strong> @* @Device.DeviceInfo.Model *@</div>
                    <div class="detail_item_box"><strong>Make:</strong> @* @Device.DeviceInfo.Make *@</div>
                    <div class="detail_item_box"><strong>Status:</strong> <span class="text-warning">@* @Device.ErrorDescription *@</span></div>
                </div>
                <div class="custom_card details_box w-100 ms-3 mb-0 text-center">



                    @*  @if (IrisData is not null)
                    {
                    @if (captureIris.ContainsKey("capture1"))
                    {
                    <div class="captured_img">
                    <img id="imgIris" class="img-thumbnail" src="@GetImage("capture1")" alt="Capture 1"/>
                    </div>
                    }
                    else
                    {
                    <div class="captured_img">
                    <img id="imgIris" class="img-thumbnail border-primary" alt="Capture 1"/>
                    </div>
                    }
                    } *@
                    @* else
                    { *@
                    <div class="captured_img">
                        <img id="imgIris" class="img-thumbnail" src="../1024X1024.svg" width="220" height="220" alt="Capture 1" />
                    </div>
                    @* } *@

                    <button id="btnCapture1" class="btn btn_primary mt-3 w-100" @onclick="@(() => CaptureIrisAsync("capture1"))">
                        <i class="fas fa-camera"></i> Capture 1
                    </button>
                </div>
            </div>
        </div>
        <div class="col-6">
            <div class="custom_card mb-0 h-100">
                @* @if (IrisData is not null)
                { *@
                @* @if (captureIris.ContainsKey("capture1"))
                { *@
                <div class="row">
                    <div class="col-6 ">
                        <div class="">
                            <label for="txtStatus" class="form-label fw-bold text-secondary">Status:</label>
                            <input type="text" value="@* @IrisData.ErrorDescription *@" id="txtStatus" class="form-control" disabled />
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="">
                            <label for="txtQuality" class="form-label fw-bold text-secondary">Quality:</label>
                            <input type="text" value="@* @IrisData.Quality *@" id="txtQuality" class="form-control" disabled />
                        </div>
                    </div>
                    <div class="col-12 mt-3">
                        <div class="">
                            <label for="txtImageData" class="form-label fw-bold text-secondary">Image Data:</label>
                            <textarea id="txtImageData" class="form-control" rows="3" disabled>@* @IrisData.BitmapData *@</textarea>
                        </div>
                    </div>
                </div>
                @* }
                } *@
            </div>
        </div>








    </div>

</div>


<div class="custom_card">
    <div class="row">
        <!-- Enroll Section Start -->
        <div class="col-md-6 col-12">
            <p class="heading_title">Enroll</p>
            <div class="custom_card m-h-220px mb-0">

                <div class="row g-3 align-items-end">
                    <div class="col-6">
                        <label for="txtGroup" class="form-label fw-bold text-secondary">Group:</label>
                        <input type="text" id="txtGroup" @* @bind="enrollRequest.Group" *@ placeholder="Enter group name" class="form-control" required />
                    </div>

                    <div class="col-6">
                        <label for="enrollRequest.ExternalId" class="form-label fw-bold text-secondary">Code:</label>
                        <input type="text" @* @bind="enrollRequest.ExternalId" *@ id="enrollRequest.ExternalId" class="form-control" />
                    </div>
                </div>

                <div class="row g-3 align-items-center mt-3">


                    @* @if (enrollResponse is not null)
                    { *@
                    <div class="d-flex align-items-center mt-3">
                        <div class="w-50">
                            <label for="enrollResponse.Code" class="form-label fw-bold text-secondary">Response Code:</label>
                            <p id="enrollResponse.Code" class="detail_item_box p-3 text-success">@* @enrollResponse.Code *@</p>

                        </div>
                        <div class="w-50 ms-3">
                            <label for="enrollResponse.Message" class="form-label fw-bold text-secondary">Message:</label>
                            <p id="enrollResponse.Message" class="detail_item_box p-3 text-success">@* @enrollResponse.Message *@</p>
                        </div>
                    </div>
                    @* } *@
                </div>
                <div class="mt-3 w-100">
                    <button id="btnEnroll" class="btn btn_primary w-100" @onclick="EnrollIrisAsync">Enroll</button>
                </div>
            </div>
        </div>
        <!-- Enroll Section End -->
        <!-- Search Section Start -->
        <div class="col-md-6 col-12">
            <p class="heading_title">Search</p>
            <div class="custom_card m-h-220px mb-0">
                @*  @if (searchResponse is not null)
                {
                @if (searchResponse?.MatchResult?.Count > 0)
                { *@
                <div class="row g-3 align-items-center">
                    <div class="col-md-6">
                        <label for="txtImageInfo" class="form-label fw-bold text-secondary">Matching Score:</label>
                        <input type="text" value="@* @searchResponse.MatchResult[0].MatchingScore *@" id="txtImageInfo" class="form-control" disabled />
                    </div>

                    <div class="col-md-6">
                        <label for="txtIsoTemplate" class="form-label fw-bold text-secondary">Image Data:</label>
                        <textarea id="txtIsoTemplate" class="form-control" rows="2" disabled>@* @IrisData?.BitmapData *@</textarea>
                    </div>

                    <div class="col-md-12 mt-5">
                        <button id="btnMatch" class="btn btn_primary w-100" @onclick="SearchIrisAsync">Search</button>
                    </div>
                </div>
                @* }
                else
                {
                <p>No match results found!</p>
                }
                } *@
            </div>
        </div>
        <!-- Search Section End -->
    </div>
</div>




<!--Match Section Start -->

<div class="custom_card">
<p class="heading_title">Match</p>
    <div class="row g-3 align-items-center">
        <div class="col-md-6">
            <div class="d-flex justify-content-between">
                <div class="custom_card w-100 mb-0 text-center">
                    <p class="text_primary">Capture 1</p>
                    @*  @if (IrisData is not null)
                    {
                    @if (captureIris.ContainsKey("capture1"))
                    { *@
                    @*  <div class="captured_img">
                    <img id="imgIris" alt="Capture 1" class="img-thumbnail" height="220" width="220" src="@GetImage("capture1")" />
                    </div> *@
                    @* }
                    else
                    { *@
                    <div class="captured_img">
                        <img id="imgIris" alt="Capture 1" class="img-thumbnail border-primary" src="../1024X1024.svg" height="220" width="220" />
                    </div>
                    @* } *@
                    @* }
                    else
                    {
                    <div class="captured_img">
                    <img id="imgIris" alt="Capture 1" class="img-thumbnail border-primary" height="220" width="220" />
                    </div>
                    } *@
                </div>
                <div class="custom_card w-100 mb-0 text-center ms-3">

                    @*  @if (IrisData is not null)
                    {
                    @if (captureIris.ContainsKey("capture2"))
                    {
                    <div class="captured_img">
                    <img id="imgIris" alt="Capture 2" class="img-thumbnail" height="220" width="220" src="@GetImage("capture2")" />
                    </div>
                    }
                    else
                    { *@
                    <div class="captured_img">
                        <img id="imgIris" alt="Capture 2" class="img-thumbnail border-primary" src="../1024X1024.svg" height="220" width="220" />
                    </div>
                    @*  }
                    }
                    else
                    {
                    <div class="captured_img">
                    <img id="imgIris" alt="Capture 2" class="img-thumbnail border-primary" height="220" width="220" />
                    </div>
                    } *@
                    <div class="mt-3">
                        <button id="btnEnroll" class="btn btn_primary w-100" @onclick="@(() => CaptureIrisAsync("capture2"))">Capture 2</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <button id="btnEnroll" class="btn btn_primary w-100" @onclick="MatchIrisAsync">Match</button>
        </div>
        <div class="col-md-4">
            <div class="custom_card mb-0">
                @*   @if (matchResponse is not null)
                { *@
                <label for="txtStatus" class="form-label fw-bold text-secondary">Match:</label>
                <input type="text" value="@* @matchResponse.Matched *@" id="txtStatus" class="form-control" disabled />
                @* } *@
            </div>
        </div>



    </div>
</div>

<!--Match Section End -->
@* } *@



@code {
    Device? Device;

    CaptureViewModel? IrisData;

    EnrollmentRequest? enrollRequest;

    EnrollmentResponse? enrollResponse;

    SearchRequest? searchRequest;

    SearchResponse? searchResponse;

    MatchRequest? matchRequest;

    MatchResponse? matchResponse;

    private Dictionary<string, string> captureIris = new Dictionary<string, string>();

    protected override async Task OnInitializedAsync()
    {
        Device = await deviceService.GetDeviceInfoAsync();

        enrollRequest ??= new EnrollmentRequest();
        searchRequest ??= new SearchRequest();
        matchRequest ??= new MatchRequest();

    }

    private async Task CaptureIrisAsync(string captureKey)
    {

        if (captureIris.ContainsKey(captureKey))
        {
            captureIris[captureKey] = null;
        }

        StateHasChanged();

        IrisData = await capturingServices.StartCaptureAsync(10);

        if (enrollRequest is not null)
        {

            captureIris[captureKey] = IrisData.BitmapData;

            if (captureKey == "capture1")
            {
                matchRequest.Iris1 = IrisData.BitmapData;
            }
            else
            {
                matchRequest.Iris2 = IrisData.BitmapData;
            }

            enrollRequest.Iris = IrisData.BitmapData;
            searchRequest.Iris = IrisData.BitmapData;
        }

        StateHasChanged();

    }

    private string GetImage(string captureKey)
    {
        if (captureIris.ContainsKey(captureKey) && !string.IsNullOrEmpty(captureIris[captureKey]))
        {
            return $"data:image/bmp;base64,{captureIris[captureKey]}";
        }
        return "";
    }

    private async Task EnrollIrisAsync()
    {
        enrollResponse = await matchingServices.EnrollAsync(enrollRequest);
        if (searchRequest is not null)
        {
            searchRequest.Group = enrollRequest.Group;
        }
    }

    private async Task SearchIrisAsync()
    {
        searchResponse = await matchingServices.SearchAsync(searchRequest);
    }

    private async Task MatchIrisAsync()
    {
        matchResponse = await matchingServices.MatchAsync(matchRequest);
    }

}
