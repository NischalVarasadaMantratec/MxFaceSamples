@page "/"
@using MxFaceSamples.BuildingBlocks.Fingerprint.Interfaces
@using MxFaceSamples.BuildingBlocks.Fingerprint.Models
@using MxFaceSamples.BuildingBlocks.Fingerprint.Services
@using MxFaceSamples.UI.Fingerprint.Services
@inject DeviceService deviceService
@inject FingerprintCapturingService capturingServices
@inject FingerprintMatchingService matchingServices

<PageTitle>MxFace Fingerprint Sample</PageTitle>

@if (Device is null)
{
    <div class="alert alert-warning text-center">
        <strong>No Device Found!</strong>
    </div>
}
else
{
    <div class="container mt-4">
        @* Capture *@
        <div class="card mb-4 shadow-sm">
            <div class="card-header bg-primary text-white">
                Capture Fingerprint
            </div>
            <div class="card-body">
                <div class="row mb-2">
                    <div class="col-md-4">
                        <button class="btn btn-primary w-100" @onclick="@(() => CaptureFingerPrintAsync("capture1"))">
                            Capture 1
                        </button>
                    </div>

                    <div class="col-md-4 text-center">
                        <h6>FingerPrint 1</h6>
                        @if (FingerprintData is not null && captureFingerprints.ContainsKey("capture1"))
                        {
                            <img id="imgFinger" alt="Finger Image" class="img-thumbnail img-fluid" style="width: 150px; height: 200px;" src="data:image/bmp;base64,@captureFingerprints["capture1"]" />
                        }
                        else
                        {
                            <div class="fingerprint-placeholder img-thumbnail" style="width: 150px; height: 200px;"></div>
                        }
                    </div>


                    <div class="col-md-4">
                        <div><strong>Serial No:</strong> @Device.DeviceInfo.SerialNo</div>
                        <div><strong>Model:</strong> @Device.DeviceInfo.Model</div>
                        <div><strong>Make:</strong> @Device.DeviceInfo.Make</div>
                        <div><strong>Status:</strong> @Device.ErrorDescription</div>
                    </div>
                </div>

                @if (FingerprintData is not null)
                {
                    <div class="row mt-3">
                        <div class="col-md-6">
                            <div><strong>Status:</strong></div>
                            <input type="text" value="@FingerprintData.ErrorDescription" class="form-control" disabled />
                        </div>
                        <div class="col-md-6">
                            <div><strong>Quality:</strong></div>
                            <input type="text" value="@FingerprintData.Quality" class="form-control" disabled />
                        </div>
                        <div class="col-md-12 mt-2">
                            <div><strong>Image Data:</strong></div>
                            <textarea class="form-control" style="height: 50px; resize: none" disabled>@FingerprintData.BitmapData</textarea>
                        </div>
                    </div>
                }
            </div>
        </div>

        @* Enroll *@
        <div class="card mb-4 shadow-sm">
            <div class="card-header bg-success text-white">
                Enroll Fingerprint
            </div>
            <div class="card-body">
                <div class="row mb-2">
                    <div class="col-md-3">Code:</div>
                    <div class="col-md-9">
                        <input type="text" @bind="enrollRequest.ExternalId" class="form-control" />
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-md-3">
                        <input type="text" @bind="enrollRequest.Group" placeholder="Group" class="form-control mb-2" required />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <button class="btn btn-success w-100" @onclick="EnrollFingerPrintAsync">
                            Enroll
                        </button>
                    </div>
                </div>

                @if (enrollResponse is not null)
                {
                    <div class="mt-3">
                        <div><strong>Code:</strong> @enrollResponse.Code</div>
                        <div><strong>Message:</strong> @enrollResponse.Message</div>
                    </div>
                }
            </div>
        </div>

        @* Search *@
        <div class="card mb-4 shadow-sm">
            <div class="card-header bg-info text-white">
                Search Fingerprint
            </div>
            <div class="card-body">
                <button class="btn btn-info w-100 mb-3" @onclick="SearchFingerPrintAsync">
                    Search
                </button>

                @if (searchResponse is not null)
                {
                    if (searchResponse.MatchResult.Count > 0)
                    {
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <div><strong>Matching Score:</strong></div>
                                <input type="text" value="@searchResponse.MatchResult[0].MatchingScore" class="form-control" disabled />
                            </div>
                            <div class="col-md-12 mt-2">
                                <div><strong>Image Data:</strong></div>
                                <textarea class="form-control" style="height: 50px; resize: none" disabled>@FingerprintData.BitmapData</textarea>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            No Fingerprint Found!
                        </div>
                    }
                }
            </div>
        </div>

        @* Match *@
        <div class="card shadow-sm">
            <div class="card-header bg-secondary text-white">
                Match Fingerprints
            </div>
            <div class="card-body">
                <div class="row mb-2">
                    <div class="col-md-3">
                        <button class="btn btn-secondary w-100" @onclick="@(() => CaptureFingerPrintAsync("capture2"))">
                            Capture 2
                        </button>
                    </div>
                    <div class="col-md-3">
                        <button class="btn btn-secondary w-100" @onclick="MatchFingerPrintAsync">
                            Match
                        </button>
                    </div>

                    <div class="col-md-4 text-center">
                        <h6>FingerPrint 1</h6>
                        @if (FingerprintData is not null && captureFingerprints.ContainsKey("capture1"))
                        {
                            <img id="imgFinger" alt="Finger Image" class="img-thumbnail img-fluid" style="width: 150px; height: 200px;" src="data:image/bmp;base64,@captureFingerprints["capture1"]" />
                        }
                        else
                        {
                            <div class="fingerprint-placeholder img-thumbnail" style="width: 150px; height: 200px;"></div>
                        }
                    </div>


                    <div class="col-md-3 text-center">
                        <h6>FingerPrint 2</h6>
                        @if (FingerprintData is not null && captureFingerprints.ContainsKey("capture2"))
                        {
                            <img id="imgFinger2" alt="Finger Image" class="img-thumbnail" src="data:image/bmp;base64,@captureFingerprints["capture2"]" style="width: 150px; height: 200px;" />
                        }
                        else
                        {
                            <div class="fingerprint-placeholder img-thumbnail" style="width: 150px; height: 200px;"></div>
                        }
                    </div>
                </div>

                @if (matchResponse is not null)
                {
                    <div class="row mt-2">
                        <div class="col-md-3">Matched:</div>
                        <div class="col-md-9">
                            <input type="text" value="@matchResponse.Matched" class="form-control" disabled />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

@code {
    // Existing code remains unchanged
    Device? Device;
    CaptureViewModel? FingerprintData;
    CaptureViewModel? FingerprintData2;
    EnrollmentRequest? enrollRequest;
    EnrollmentResponse? enrollResponse;
    SearchRequest? searchRequest;
    SearchResponse? searchResponse;
    string? FingerprintBitMap;
    MatchResponse? matchResponse;
    MatchRequest? matchRequest;
    private int captureCount = 0;
    private Dictionary<string, string> captureFingerprints = new Dictionary<string, string>();

    protected override async Task OnInitializedAsync()
    {
        var DeviceNames = new List<string>();
        await deviceService.GetConnectedDevices(DeviceNames);

        Device = await deviceService.GetDeviceInfoAsync(DeviceNames[0]);

        enrollRequest ??= new EnrollmentRequest();
        searchRequest ??= new SearchRequest();
        matchRequest ??= new MatchRequest();
    }

    private async Task CaptureFingerPrintAsync(string captureKey)
    {
        FingerprintData = await capturingServices.StartCaptureAsync(10, 60);

        if (enrollRequest is not null)
        {
            captureFingerprints[captureKey] = FingerprintData.BitmapData;

            if (captureKey == "capture1")
            {
                matchRequest.FingerPrint1 = FingerprintData.BitmapData;
            }
            else if (captureKey == "capture2")
            {
                matchRequest.FingerPrint2 = FingerprintData.BitmapData;
            }
            enrollRequest.FingerPrint = FingerprintData.BitmapData;
            searchRequest.FingerPrint = FingerprintData.BitmapData;
        }
    }

    private async Task EnrollFingerPrintAsync()
    {
        enrollResponse = await matchingServices.EnrollAsync(enrollRequest);
        if (searchRequest is not null)
        {
            searchRequest.Group = enrollRequest.Group;
        }
    }

    private async Task SearchFingerPrintAsync()
    {
        searchResponse = await matchingServices.SearchAsync(searchRequest);
    }

    private async Task MatchFingerPrintAsync()
    {
        if (enrollRequest?.FingerPrint != null && FingerprintData?.BitmapData != null)
        {
            matchResponse = await matchingServices.MatchAsync(matchRequest);
        }
    }
}
